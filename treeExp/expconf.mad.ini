; EXPERIMENT AND PATCH DEFINING PARAMETERS
; ========================================
; TIMING of the experiment
; #####  FOR HARVESTING (effective harvest time is apple-to-apple, t)
; 1)           delay to decision -   black cross   -   delayToDecision    \
; 2)           time to decide    -   white cross   -   delayTooSlow       |   t in the simulation code
; 3)           apple time        -     apples      -   appleTime          |
; 4)           handling time     -   black cross   -   t                  /
; done automatically: lengthTooSlow - duration of warning (total timeout = t)

; ##### FOR EXIT (effective exit time is apple-to-apple, t+d)
; 1)           delay to decision -   black cross   -   delayToDecision    \
; 2)           time to decide    -   white cross   -   delayTooSlow       |   d in the simulation code 
; 2)           travel time       -   black cross   -   d                  /

; Experiment parameters and versions
; ==================================
[main]
version=8           ; version 7: for laura 
datafolder=../../data  ; folder to save data

; Game parameters, common to all patches
; ======================================
[game]
delayToDecision            = 0.25       ; delay between the reward and the next decision, cross is black
delayTooSlow               = 1           ; delay before showing the too slow warning/DM time
appleTime                  = 0.75       ; length of time that the apples are displayed

rewardImage                = apple.png ; replace with coin.png to load $ images
applePrice                 = 0.1     ; (1.25 - $30 in 26 mins) how much one apple is worth in cents CHANGE
blockBreakLength           = 2         ; minimum length of the break between blocks

numberOfPatchBlock         = 4         ; total number of patch blocks (count even if the same parameters)
gameSequenceN              = 2         ; depends on number of different patch block types
gameSequence1              = 1,2,break,1,2,end ;
gameSequence2              = 2,1,break,2,1,end ;
ncolors                    = 2         ; as many colors as patch types (gameSequenceN)

fixationShape              = circle  ; shape of the fixation
forceStayFirstHarvest      = 1 

; Default Parameters for all patches
; ==================================
[DEFAULT]
blockTime      = 420  ; duration of patch block in seconds (14 minutes)
R0_m           = 10   ; mean for initial R0 draw in each patch
R0_sd          = 1    ; sd for initial R0 draw in each patch
Rmax           = 15   ; maximum reward allowed
delta_a        = 14.90873 ; alpha parameter of beta distribution (in matlab, mean=0.88, quantile crossing=0.1)
delta_b        = 2.033008 ; alpha parameter of beta distribution
t              = 1      ; + delayToDecision + delayTooSlow + appleTime = t in simulation (3)
d              = 4.75   ; + delayToDecision + delayTooSlow             = d in simulation (6)
cutoff         = 0.5    ; smallest R cutoff, if greater, R = 0. 0.5 will give half an apple

patchIntroText = You are entering a new orchard! \n \n Remember, pay attention to the time it takes \n to go to a new tree and to harvest apples, \n how the supply of apples depletes, \n and the quality of the tree! \n \n [press SPACEBAR to continue]

breakText     = \n \n Please notify the experimenter that you \n are finished with the first half. \n \n [Press Spacebar to continue] ;

color1 = 125,112,145           ; equal saturation and luminosity (60), purple-blue
color2 = 129,128,68            ; equal saturation and luminosity (60), army green

ticker.show  = 0
shakeTree    = 1                  ; whether to shake the tree when apples are harvested
randomApplePosition = 0

; Different parameters across patches (AB ordering), note: patch overwrites default
; =================================================================================
; rho       t        d   alpha_m     R_bar     alpha_sd  mean_foraging applePrice ($25)
; 2.262884  3        3     0.88      7.73                   ~2          0.008$
; 1.6745    3        9     0.88      5.76                   ~4.2        0.008$
; ---------------------------------------------------------------------------------
[patch1]
d              = 4.75      ; 4.75 + 1.25 = 6                                                                                                                                                                   
delta_a        = 14.90873 ; alpha parameter of beta distribution (in matlab, mean=0.88, quantile crossing=0.1)
delta_b        = 2.033008 ; alpha parameter of beta distribution
bgColorType    = 1        ; patch-type indicator so that same patch-types have same color
blockname      = short    ; patch-type specifying name

[patch2]
d              = 10.75      ; 10.75 + 1.25 = 12                                                                                                                                                                        
delta_a        = 14.90873 ; alpha parameter of beta distribution (in matlab, mean=0.88, quantile crossing=0.1)
delta_b        = 2.033008 ; alpha parameter of beta distribution
bgColorType    = 2        ; patch-type indicator so that same patch-types have same color
blockname      = long     ; patch-type specifying name

; Instructions
; =========================
[INSTRUCTIONS]
instrMinLength   = 2  ; minimum seconds instructions shown before keypress accepted
totalInstrNumber = 1  ; total number of instruction slides
instrText1 = If you have questions please ask now. \n \n Otherwise, you are ready to begin! \n \n [Press Spacebar to continue]
